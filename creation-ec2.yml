---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    key_name: id_rsa
    region: eu-central-1
    image: "ami-0a0d2ca99b40eb592"
    instance_type: "t2.micro"
    sec_group: "security-group-test"

  tasks:
    - name: Provisioning EC2 instances
      block:

      - name: Create security group
        amazon.aws.ec2_security_group:
          name: "{{ sec_group }}"
          description: "Sec group for project"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"  # From vault as defined
          aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined
          rules:                                # allows ssh on port 22
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port

      - name: Start an instance with a public IP address
        amazon.aws.ec2_instance:
          name: "public-compute-instance"
          key_name: "{{ key_name }}"
          instance_type: "{{ instance_type }}"
          security_group: "{{ sec_group }}"
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"
          region: "{{ region }}"
          network:
            assign_public_ip: true
          image_id: "{{ image }}"
          tags:
            Environment: Staging

      # Always require the 'create_ec2' tag to provision EC2 instance
      tags: ['never', 'create_ec2'] 

    - name: Facts
      block: # this block prints out instance data

      - name: Get instances facts
        ec2_instance_info:
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"
      tags: always
